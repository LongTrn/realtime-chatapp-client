{"version":3,"sources":["redux/auth/authActionType.js","redux/session/sessionActionType.js","saga/authSessionSaga.js","services/base.server.js","redux/conversation/conversationActionType.js","components/SearchResultItem/SearchResultItem.jsx","redux/search/searchActionType.js","components/SearchResult/SearchResult.jsx","components/SearchConversation/SearchConversation.jsx","components/NavAccount/NavAccount.jsx","components/UserItem/UserItem.jsx","components/UserList/UserList.jsx","components/LeftNav/LeftNav.jsx","redux/messages/messagesActionType.js","components/Message/Message.jsx","components/ChatMain/ChatMain.jsx","components/Profile/Profile.jsx","components/RightMain/RightMain.jsx","components/Main/Main.jsx","redux/login/loginActionType.js","components/Login/Login.jsx","components/Route/PrivateRoute.jsx","components/Route/PublicRoute.jsx","redux/register/registerActionType.js","components/Register/Register.jsx","App.js","reportWebVitals.js","redux/auth/authReducer.js","redux/session/sessionReducer.js","redux/login/loginReducer.js","redux/register/registerReducer.js","redux/messages/messagesReducer.js","redux/conversation/conversationReducer.js","redux/search/searchReducer.js","saga/authSaga.js","socketClient.js","saga/sessionSaga.js","saga/loginSaga.js","saga/registerSaga.js","saga/messagesSaga.js","saga/conversationSaga.js","saga/searchSaga.js","saga/rootSaga.js","redux/store.js","index.js"],"names":["GET_JWT_LOCAL_STORAGE","CLEAR_JWT_LOCAL_STORAGE","GET_JWT","CLEAR_JWT","FETCH_SESSION_START","FETCH_SESSION_SUCCESS","FETCH_SESSION_FAILURE","FETCH_SESSION","workerKeepSession","watchKeepSession","KEEP_SESSION","action","put","type","console","log","takeEvery","axios","create","baseURL","process","headers","FETCH_CONVERSATION","FETCH_CONVERSATION_START","FETCH_CONVERSATION_SUCCESS","FETCH_CONVERSATION_FAILURE","PUSH_CONVERSATION","MAKE_CONVERSATION","SearchResultItem","props","data","store","useSelector","state","dispatch","useDispatch","useState","click","setClick","history","useHistory","useEffect","id","conversation","list","length","contactedId","push","className","src","img","alt","name","style","minWidth","maxWidth","whiteSpace","overflow","textOverflow","description","onClick","session","user","_id","prev","payload","targetId","MessageOutlined","SEARCH","SEARCH_START","SEARCH_SUCCESS","SEARCH_FAILURE","SearchResult","result","searchResults","currentUser","search","useParams","map","locals","image","contact","includes","to","SearchConversation","content","setContent","URLSearchParams","useLocation","useRouteMatch","url","path","placeholder","onKeyUp","event","keyCode","target","value","onChange","e","NavAccount","jwt","token","objectFit","CloseOutlined","setShouldShowMenu","pre","UserItem","exact","textDecoration","color","activeStyle","backgroundColor","lastedMessage","lastedTime","fromNow","Date","UserList","conversationList","height","undefined","item","i","LeftNav","FETCH_MESSAGES_START","FETCH_MESSAGES_SUCCESS","FETCH_MESSAGES_FAILURE","FETCH_MESSAGES","ADD_ONE_NEW_MESSAGE_SUCCESS","ADD_ONE_NEW_MESSAGE_FAILURE","SEND_MESSAGE","Message","time","toUTCString","ChatMain","shouldShowMenu","currentMessages","targetConversation","filter","refBtn","useRef","refScroll","scrollHeight","current","scrollTo","scrollDown","messages","senderId","receiverId","listener","code","document","addEventListener","removeEventListener","UnorderedListOutlined","zIndex","ref","message","alignSelf","parse","sentTime","Profile","href","RightMain","display","Main","LOGIN","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","Login","submitHandler","username","password","login","errors","error","disabled","isLoading","PrivateRoute","Component","component","rest","PublicRoute","REGISTER","REGISTER_START","REGISTER_SUCCESS","REGISTER_FAILURE","Register","register","email","phone","confirmPassword","selectedImg","previewImg","validator","errorMessage","isNaN","test","String","toLowerCase","validateEmail","previewFile","file","reader","FileReader","readAsDataURL","onloadend","finnish","onSubmit","preventDefault","files","margin","width","a","FormData","append","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","skip","limit","workerJwt","workerClearJWt","watchJwt","call","context","localStorage","fn","getItem","removeItem","INIT_SOCKET","socket","workerFetchSession","watchFetchSession","select","get","response","auth","userId","Error","workerLogin","watchLogin","post","accessToken","setItem","workerRegister","watchRegister","method","workerFetchMessages","watchProcessMessages","cM","header","newMessages","workerFetchConversation","watchFetchConversation","workerSearch","watchSearch","every","Boolean","users","rootSaga","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","sk","tempList","sort","next","newMessage","tempListPush","newFriend","founds","oldMessageIndex","splice","unshift","createStore","applyMiddleware","storeAPI","getState","handshake","io","on","targetUser","user1","user2","now","emit","run","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1d5c27f.chunk.js","sourcesContent":["export const GET_JWT_LOCAL_STORAGE = \"GET_JWT_LOCAL_STORAGE\"\r\nexport const CLEAR_JWT_LOCAL_STORAGE = \"CLEAR_JWT_LOCAL_STORAGE\"\r\nexport const GET_JWT = \"GET_JWT\"\r\nexport const CLEAR_JWT = \"CLEAR_JWT\"\r\n","export const FETCH_SESSION_START = 'FETCH_SESSION_START'\r\nexport const FETCH_SESSION_SUCCESS = 'FETCH_SESSION_SUCCESS'\r\nexport const FETCH_SESSION_FAILURE = 'FETCH_SESSION_FAILURE'\r\nexport const FETCH_SESSION = 'FETCH_SESSION'","import { put, takeEvery } from 'redux-saga/effects'\r\nimport { GET_JWT } from \"../redux/auth/authActionType\"\r\nimport { FETCH_SESSION } from \"../redux/session/sessionActionType\"\r\n\r\n\r\nexport const KEEP_SESSION = \"KEEP_SESSION\"\r\n\r\nexport function* workerKeepSession(action){\r\n    try{\r\n        // store jwt to state from localStorage\r\n        yield put({type : GET_JWT})\r\n        //store user info to state\r\n        yield put({ type : FETCH_SESSION })\r\n\r\n    } catch(err) {\r\n        console.log(err)\r\n    }\r\n}\r\n\r\nexport function* watchKeepSession(){\r\n    yield takeEvery(KEEP_SESSION, workerKeepSession)\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: process.env.REACT_APP_SERVER_URL,\r\n    headers: {\r\n        \"Content-type\": \"application/json\",\r\n    }\r\n})","export const FETCH_CONVERSATION = \"FETCH_CONVERSATION\"\r\nexport const FETCH_CONVERSATION_START = \"FETCH_CONVERSATION_START\"\r\nexport const FETCH_CONVERSATION_SUCCESS = \"FETCH_CONVERSATION_SUCCESS\"\r\nexport const FETCH_CONVERSATION_FAILURE = \"FETCH_CONVERSATION_FAILURE\"\r\n\r\nexport const PUSH_CONVERSATION = \"PUSH_CONVERSATION\"\r\nexport const MAKE_CONVERSATION = \"MAKE_CONVERSATION\"","import React, { useEffect,useState } from 'react';\r\nimport {MessageOutlined} from '@ant-design/icons'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport './SearchResultItem.scss'\r\nimport axios from '../../services/base.server';\r\n\r\nimport { PUSH_CONVERSATION, MAKE_CONVERSATION } from '../../redux/conversation/conversationActionType'\r\nfunction SearchResultItem(props) {\r\n    const { data } =  props \r\n    const store = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    const [click, setClick] = useState(false)\r\n    const history = useHistory();\r\n    const handlerClick = () => {\r\n        if (data.id !== store.session.user._id) {\r\n            setClick((prev) =>!prev)\r\n            dispatch({ \r\n                type:   MAKE_CONVERSATION,\r\n                payload: {\r\n                    targetId: data.id\r\n                }\r\n            })\r\n        }\r\n    }\r\n    function isFirst(id, list) {\r\n        return list[0].contactedId === id;\r\n    }\r\n    useEffect(() => {\r\n        if (store.conversation.list.length !== 0) {\r\n            if (click && isFirst(data.id, store.conversation.list)) {\r\n                history.push(`/chat/${data.id}`)\r\n            }\r\n        }\r\n    },[store.conversation.list, click])\r\n    return (\r\n        <div className=\"search-result-item\">\r\n            <div className=\"search-result-item__left\">\r\n                <img src={data.img} alt=\"Search result\"/>\r\n            </div>\r\n            <div className=\"search-result-item__center\">\r\n                <div className=\"search-result-item__center__name\">\r\n                    <p>{`${data.name}`}</p>\r\n                </div>\r\n                <div className=\"search-result-item__center__content\">\r\n                    <div className=\"search-result-item__center__content__info\">\r\n                        <p style={{minWidth:'150px', maxWidth: '150px', whiteSpace:'nowrap', overflow:\"hidden\", textOverflow:'ellipsis'}}>\r\n                            {data.description}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"search-result-item__right\">\r\n                {/* <Link\r\n                    to={`/chat/${data.id}`}\r\n                > */}\r\n                    <button\r\n                        onClick={handlerClick}\r\n                    >\r\n                        <MessageOutlined />\r\n                        Message\r\n                    </button>        \r\n                {/* </Link> */}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchResultItem;","export const SEARCH = \"SEARCH\"\r\nexport const SEARCH_START = \"SEARCH_START\"\r\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\"\r\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\"","import React, { useState, useEffect, } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport SearchResultItem from '../SearchResultItem/SearchResultItem'\r\n\r\nimport { SEARCH } from '../../redux/search/searchActionType'\r\nimport './SearchResult.scss'\r\n\r\nfunction SearchResult (props) {\r\n    \r\n    const result = useSelector(state => state.searchResults) \r\n    const { user: currentUser } = useSelector(state => state.session) \r\n    const dispatch = useDispatch();\r\n    const { search } = useParams();\r\n\r\n    useEffect(()=> {\r\n        dispatch({ type: SEARCH, payload: {search}})\r\n    },[search])\r\n\r\n    return (\r\n        <div \r\n            className=\"search-result\"\r\n        >\r\n            <p>Search Result</p>\r\n            {\r\n                result.data.map(user => \r\n                    <SearchResultItem \r\n                        key={user._id}\r\n                        data={{\r\n                            id: user._id,\r\n                            img: user.locals.image || \"https://picsum.photos/100\",\r\n                            name: user.locals.name,\r\n                            description: user.contact.includes(currentUser)? \"Friend\": \"Not in Contact\",\r\n                        }}/>\r\n            )}\r\n            <div className=\"search-result__see-more\">\r\n                <Link to=\"/\">\r\n                    <button>Back Home</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult;","import React, { useState, useEffect }from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {useRouteMatch, Link, useLocation } from 'react-router-dom'\r\nimport SearchResult from '../SearchResult/SearchResult'\r\nimport './SearchConversation.scss'\r\n\r\nfunction SearchConversation (props) {\r\n\r\n    const [content, setContent ] = useState(\"\") \r\n    const submitSearch = (event) => {\r\n        if (event.keyCode === 13 && event.target.value !== \"\") {\r\n            console.log(event.target.value)\r\n            \r\n        }\r\n    }\r\n    let query =  new URLSearchParams(useLocation().search);\r\n\r\n    const {path, url} = useRouteMatch();\r\n    return (\r\n        <div className=\"search-conversation\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder='Find new friends...'\r\n                onKeyUp= {submitSearch}\r\n                onChange={e => setContent(e.target.value)}\r\n            />\r\n            <Link\r\n                to={`${url}search/${content}`}\r\n            >\r\n                <button>\r\n                    Search\r\n                </button>\r\n            </Link>\r\n            {/* <SearchResult/> */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SearchConversation;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport './NavAccount.scss'\r\nimport SearchConversation from '../SearchConversation/SearchConversation'\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport {CLEAR_JWT} from \"../../redux/auth/authActionType\"\r\nfunction NavAccount(props) {\r\n    const user = useSelector(state => state.session.user)\r\n    const jwt = useSelector(state => state.jwt)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    useEffect(() =>{\r\n        console.log(`user`)\r\n        console.log(user)\r\n        if (!jwt.token) {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [jwt])\r\n    return (\r\n        <div className=\"nav-account\">\r\n            <div className=\"nav-account__user\">\r\n                <img src={user.image} alt=\"Avatar user\" style={{ objectFit:\"cover\" }}/>\r\n                <p>{`Chào ${user.name}!`}</p>\r\n                <button\r\n                    onClick={()=>{\r\n                        dispatch({\r\n                            type: CLEAR_JWT\r\n                        })\r\n                    }}\r\n                > Logout</button>\r\n                <CloseOutlined className=\"nav-account__user__icon-close\"\r\n                    onClick={() => props.setShouldShowMenu(pre => !pre)}\r\n                />\r\n            </div>\r\n            <SearchConversation />\r\n            {/* <div className=\"nav-account__search\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Find new friends...'\r\n\r\n                />\r\n                <button>search</button>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavAccount;","import React from 'react';\r\nimport Moment from \"react-moment\";\r\nimport './UserItem.scss'\r\n\r\nimport { NavLink, } from 'react-router-dom'\r\nfunction UserItem(props) {\r\n    const { data } =  props \r\n    \r\n    return (\r\n        <NavLink \r\n            exact\r\n            to={`/chat/${data.contactedId}`} \r\n            style={{textDecoration: 'none', color:'inherit'}}\r\n            activeStyle={{backgroundColor : \"#3a3b3c\"}}\r\n        >\r\n            <div className=\"user-item\">\r\n                \r\n                <div className=\"user-item__left\">\r\n                    <img src={\"https://picsum.photos/200\"} alt=\"\"/>\r\n                </div>\r\n\r\n                <div className=\"user-item__center\">\r\n                    <div className=\"user-item__center__name\">\r\n                        <p>{`${data.name}`}</p>\r\n                    </div>\r\n                    <div className=\"user-item__center__content\">\r\n                        <div className=\"user-item__center__content__msg\">\r\n                            <p style={{minWidth:'150px', maxWidth: '150px', whiteSpace:'nowrap', overflow:\"hidden\", textOverflow:'ellipsis'}}>\r\n                                {data.lastedMessage}\r\n                            </p>\r\n                        </div>\r\n                    \r\n                        <div className=\"user-item__center__content__time\">\r\n                            {data.lastedTime && <Moment style={{color: \"gray\"}}fromNow>{new Date(data.lastedTime)}</Moment>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"user-item__right\">\r\n                    <img src={`https://picsum.photos/200`} alt=\"\"/>\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default UserItem;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { FETCH_CONVERSATION } from \"../../redux/conversation/conversationActionType\"\r\n\r\nimport UserItem from '../UserItem/UserItem';\r\n\r\nimport './UserList.scss'\r\n\r\nfunction UserList(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const { setShouldShowMenu } = props\r\n\r\n    const conversationList = useSelector(state => state.conversation.list)\r\n\r\n    useEffect(() => {\r\n        dispatch({ type : FETCH_CONVERSATION })\r\n    }, [])\r\n\r\n    return (\r\n        <div \r\n            className=\"user-list\" \r\n            style={{height: 'calc(100vh - 128px)'}}\r\n            onClick={() => {\r\n                if(setShouldShowMenu !== undefined)\r\n                    return setShouldShowMenu(pre => !pre)\r\n                else return undefined\r\n            }} \r\n        >\r\n            {\r\n\r\n                conversationList.map((item, i) => \r\n                    {console.log(item); return  <UserItem \r\n                        key={i} \r\n                        id={i} \r\n                        data={item} \r\n                    />}\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserList;","import React from 'react';\r\nimport './LeftNav.scss'\r\n\r\nimport NavAccount from '../NavAccount/NavAccount';\r\nimport UserList from '../UserList/UserList'\r\nfunction LeftNav(props) {\r\n    let {\r\n        style,\r\n        setShouldShowMenu,\r\n    } = props;\r\n    \r\n    return (\r\n        <div className=\"left-nav\" style={style}>\r\n            <NavAccount \r\n                setShouldShowMenu={setShouldShowMenu} \r\n            />\r\n            <UserList \r\n                setShouldShowMenu={setShouldShowMenu}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LeftNav;","export const FETCH_MESSAGES_START = \"FETCH_MESSAGES_START\" //reducer\r\nexport const FETCH_MESSAGES_SUCCESS = \"FETCH_MESSAGES_SUCCESS\" //reducer\r\nexport const FETCH_MESSAGES_FAILURE = \"FETCH_MESSAGES_FAILURE\" //reducer\r\nexport const FETCH_MESSAGES = \"FETCH_MESSAGES\" //sage\r\n\r\nexport const ADD_ONE_NEW_MESSAGE_SUCCESS = \"ADD_ONE_NEW_MESSAGE_SUCCESS\"  //reducer\r\nexport const ADD_ONE_NEW_MESSAGE_FAILURE = \"ADD_ONE_NEW_MESSAGE_FAILURE\"  //reducer\r\nexport const SEND_MESSAGE = \"SEND_MESSAGE\" //saga\r\n","import React from 'react';\r\n\r\nimport './Message.scss'\r\nfunction Message(props) {\r\n    return (\r\n        <div {...props} className=\"message\">\r\n            <div className=\"message__content\">\r\n                {props.content}\r\n            </div>\r\n            <div className=\"message__time\">\r\n                {props.time.toUTCString()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { FETCH_MESSAGES, SEND_MESSAGE } from \"../../redux/messages/messagesActionType\"\r\n\r\n\r\nimport { UnorderedListOutlined } from '@ant-design/icons'\r\nimport Message from \"../Message/Message.jsx\"\r\nimport './ChatMain.scss'\r\nfunction ChatMain(props) {\r\n\r\n\r\n    //test\r\n    // const devId = '606836ab9158801258ac3498'\r\n    // const adminId = '60688ba34507a14e9caf541a'\r\n    const { shouldShowMenu, setShouldShowMenu } = props\r\n    const {targetId} = useParams()\r\n\r\n    const currentMessages = useSelector(state => state.currentMessages)\r\n    const session = useSelector(state => state.session)\r\n    const list = useSelector(state => state.conversation.list)\r\n    const targetConversation = list.filter(item => item.contactedId === targetId)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [content, setContent] = useState(\"\")\r\n    // const {path} = useRouteMatch\r\n    console.log(\"url: \", targetId)\r\n    \r\n    const refBtn = useRef(null)\r\n    const refScroll = useRef(null)\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"last log after send mess\")\r\n        const scrollDown = e => {\r\n            const { scrollHeight } = refScroll.current\r\n            refScroll.current.scrollTo(0, scrollHeight)\r\n        } \r\n        scrollDown()\r\n        setContent(\"\")\r\n    }, [currentMessages.messages])\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type : FETCH_MESSAGES,\r\n            payload : {\r\n                senderId : session.user._id, \r\n                receiverId : targetId,\r\n                // skip : currentMessages.skip\r\n            }\r\n        })\r\n\r\n        //\r\n        const listener = event => {\r\n            if (event.code === \"Enter\" || event.code === \"NumpadEnter\") {\r\n                refBtn.current.click()\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"keyup\", listener);\r\n        \r\n        console.log(targetConversation)\r\n\r\n        return () => {\r\n            document.removeEventListener(\"keyup\", listener);\r\n            \r\n        };\r\n    }, [targetId])\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"chat-main\">\r\n            <div className=\"chat-main__header\">\r\n                <div className=\"chat-main__header__avatar\">\r\n                    <img src=\"https://picsum.photos/200\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"chat-main__header__name\">\r\n                    <p>\r\n                        {`To ${targetConversation[0].name}`} \r\n                    </p>\r\n                </div>\r\n                { !shouldShowMenu && <UnorderedListOutlined \r\n                    style={{zIndex:99}}\r\n                    className=\"chat-main__header__icon-close\" \r\n                    onClick={() => setShouldShowMenu(pre => {console.log(pre); return !pre})}\r\n                \r\n                />}\r\n            </div>\r\n            <div \r\n                className=\"chat-main__content\" \r\n                style={{height: 'calc(100vh - 122px)'}}\r\n                ref={refScroll}\r\n            >\r\n                {currentMessages.messages.map((message) => <Message \r\n                        key={message._id} \r\n                        style={{\r\n                            alignSelf : message.senderId === session.user._id ? 'flex-end' : 'flex-start'\r\n                        }}\r\n                        content = {message.content}\r\n                        time = {new Date(Date.parse(message.sentTime))}\r\n                    />\r\n                )}\r\n                \r\n            </div>\r\n            <div className=\"chat-main__feature\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Type the messages here...\"\r\n                    value={content}\r\n                    onChange={e => setContent(e.target.value)}\r\n                />\r\n                <button\r\n                    ref={refBtn}\r\n                    onClick={() => {\r\n                        if (content) {\r\n                            dispatch({\r\n                                type : SEND_MESSAGE,\r\n                                payload : {\r\n                                    receiverId : targetId,\r\n                                    content\r\n                                }\r\n                            })\r\n                        }\r\n                    }}\r\n                >Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatMain;","import React from 'react'\r\nimport './Profile.scss'\r\nfunction Profile(props) {\r\n    \r\n    return(\r\n        <div className=\"profile\">\r\n            <div className=\"profile-background-img\">\r\n                <img \r\n                    src=\"https://picsum.photos/200\" \r\n                    alt=\"backgroung-img\"/>\r\n            </div>\r\n            <div className=\"profile-front\">\r\n                <div className=\"profile-front-img\">\r\n                    <img \r\n                        src=\"https://picsum.photos/200\" \r\n                        alt=\"profile-img\"/>\r\n                </div>\r\n                <div className=\"profile-front-info\">\r\n                    <div className=\"profile-front-info-name\">\r\n                        <h1>\r\n                            Name of User\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"profile-front-info-action\">\r\n                        {/* <button>Add Friend</button> */}\r\n                        <a href=\"/chat/0\">\r\n                            <button>Message</button>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from \"react-redux\"\r\nimport {\r\n    Switch,\r\n    Route,\r\n    useRouteMatch,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\n\r\nimport { UnorderedListOutlined } from '@ant-design/icons'\r\n\r\nimport ChatMain from '../ChatMain/ChatMain';\r\nimport LeftNav from '../LeftNav/LeftNav'\r\nimport SearchResult from '../SearchResult/SearchResult'\r\nimport Profile from '../Profile/Profile'\r\nimport './RightMain.scss'\r\nfunction RightMain(props) {\r\n\r\n    const [shouldShowMenu, setShouldShowMenu] = useState(true)\r\n    const { user } = useSelector(state => state.session)\r\n\r\n    return (\r\n        <div className=\"right-main\">\r\n            {/* this contain the Left nav for mobile device */}\r\n            <div className=\"right-main__menu-mobile\">\r\n                {shouldShowMenu && <LeftNav style={{display: 'block'}} setShouldShowMenu={setShouldShowMenu} shouldShowMenu={shouldShowMenu}/>}\r\n            </div>\r\n            {/* this wil contain routes: chat, search result, info user*/}\r\n            <Switch>\r\n                <Route  path={`/chat/:targetId`}>\r\n                    { <ChatMain shouldShowMenu={shouldShowMenu} setShouldShowMenu={setShouldShowMenu}/>}\r\n                </Route>\r\n                \r\n                <Route exact path={`/user`}>\r\n                    <Profile/>\r\n                </Route>\r\n                <Route path={`/search/:search`}>\r\n                    <SearchResult/>\r\n                </Route>\r\n                <Route exact path={`/`}>\r\n                    <div className=\"wellcome\" >\r\n                        <div className=\"wellcome__header\">\r\n                        {   !shouldShowMenu &&\r\n                            <div \r\n                                style={{zIndex: \"100\"}}\r\n                                className=\"wellcome__header__icon-close\" \r\n                                onClick={() => setShouldShowMenu(pre => {console.log(pre); return !pre})}\r\n                            >\r\n                                <UnorderedListOutlined />\r\n                            </div>\r\n                        }\r\n                        </div>\r\n                        <div className=\"wellcome__body\">\r\n                            {user.name} ơi! Bạn bè đang đợi đấy!\r\n                        </div>\r\n                    </div>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RightMain;","import React, {  } from 'react';\r\n// import UserList from '../UserList/UserList';\r\n// import UserItem from '../UserItem/UserItem'\r\nimport './Main.scss'\r\n\r\nimport LeftNav from '../LeftNav/LeftNav'\r\nimport RightMain from '../RightMain/RightMain';\r\nfunction Main(props) {\r\n\r\n    \r\n    return (\r\n        <div className=\"main\">\r\n            <LeftNav/>\r\n            <RightMain /> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","export const LOGIN = \"LOGIN\"\r\nexport const LOGIN_START = \"LOGIN_START\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\"","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { LOGIN } from \"../../redux/login/loginActionType\"\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport './Login.scss'\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch()\r\n    const submitHandler = (event) =>{\r\n        let {username, password} = content\r\n        if(event.keyCode === 13 && username && password) {\r\n            dispatch({\r\n                type : LOGIN,\r\n                payload : content\r\n            })\r\n        }\r\n    }\r\n    const {login, jwt, session} = useSelector(state => ({ \r\n        login : state.login, \r\n        jwt : state.jwt,\r\n        session : state.session \r\n    }))\r\n\r\n    const [content, setContent] = useState({\r\n        username : \"\",\r\n        password : \"\"\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if(jwt.token !== null && session.user !== null){\r\n\r\n            history.push(\"/\")\r\n        }\r\n    }, [jwt.token, session.user]) \r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-page__header\">\r\n                <h1>The best chat app in Viet Nam</h1>\r\n            </div>\r\n            <div className=\"login-page__body\">\r\n\r\n                <div className=\"login-form\">\r\n                    <div className=\"login-form__title\">\r\n                        <h2>Login now!</h2>\r\n                    </div>\r\n                    <div className=\"login-form__alert\">\r\n                        {login.errors.map((error, i) => (<p key={i}>{error.message}</p>))}\r\n                    </div>\r\n                    <div className=\"login-form__body\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Username\"\r\n                            onChange={e => setContent({...content, username : e.target.value})}\r\n                            onKeyUp={submitHandler}\r\n                        />\r\n                        <input \r\n                            type=\"password\" \r\n                            placeholder=\"Password\"\r\n                            onChange={e => setContent({...content, password : e.target.value})}\r\n                            onKeyUp={submitHandler}\r\n                        />\r\n                        <button \r\n                            disabled={login.isLoading}\r\n                            onClick={() => {\r\n                                console.log(content)\r\n                                dispatch({\r\n                                    type : LOGIN,\r\n                                    payload : content\r\n                                })\r\n                            }} \r\n                        >Login</button>\r\n                    </div>\r\n                    <div className=\"login-form__footer\">\r\n                        <Link \r\n                            style={{textDecoration:\"none\", color: \"#0096C7\"}}\r\n                            to=\"/register\"\r\n                        >Have no account?</Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"login-page__footer\">\r\n                <p>\r\n                    Developed by Le Anh Hao, Tran Bao Long, Nguyen Thuong Hai\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const {jwt, session} = useSelector(state => ({jwt : state.jwt, session : state.session}))\r\n    console.log(\"private route log: \", jwt, session)\r\n    return (\r\n        <Route {...rest}>\r\n            {\r\n                (jwt.token !== null && session.user !== null) ? \r\n                <Component/> : <Redirect to=\"/login\" />\r\n            }\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n    const {jwt, session} = useSelector(state => ({jwt : state.jwt, session : state.session}))\r\n    console.log(\"public route log: \", jwt, session)\r\n    return (\r\n        <Route {...rest}>\r\n            {\r\n                (jwt.token !== null && session.user !== null) ? \r\n                <Redirect to=\"/\" /> : <Component/>\r\n            }\r\n        </Route>\r\n    );\r\n}\r\n\r\nexport default PublicRoute;","export const REGISTER = \"REGISTER\"\r\nexport const REGISTER_START = \"REGISTER_START\"\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\"\r\nexport const REGISTER_FAILURE = \"REGISTER_FAILURE\"","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nimport { REGISTER } from \"../../redux/register/registerActionType\"\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport './Register.scss'\r\nfunction Register(props) {\r\n    const dispatch = useDispatch()\r\n    const state = useSelector(state => state.register)\r\n    \r\n    const [content, setContent] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        username : \"\",\r\n        password : \"\",\r\n        confirmPassword : \"\",\r\n        img: null,\r\n        selectedImg: null,\r\n        previewImg: \"\",\r\n        error: null\r\n    })\r\n\r\n    const validator = () => {\r\n        // const listInvalid = content.filter(field => field === \"\")\r\n        // console.log(listInvalid)\r\n        // content.useState(previousState => ({...previousState, error: previousState.error.push(\"\")}))\r\n        let errorMessage = \"\";\r\n        const { name, email, phone, img, selectedImg, username, password, confirmPassword} = content;\r\n        if (name === \"\") {\r\n            errorMessage = \"Vui lòng nhập tên\"\r\n        }\r\n        else if (phone === \"\") {\r\n            errorMessage = \"Vui lòng nhập số điện thoại\"\r\n            \r\n        }\r\n        else if (isNaN(phone) && phone !== \"\") {\r\n            errorMessage = \"Vui lòng nhập số điện thoại hợp lệ\"\r\n            \r\n        }\r\n        else if (!isNaN(phone) && phone.length <= 8 || phone.length > 12) {\r\n            errorMessage = \"Vui lòng nhập đúng số điện thoại\"\r\n            \r\n        }\r\n        else if (email === \"\") {\r\n            errorMessage = \"Vui lòng nhập email\"\r\n            \r\n        }\r\n        else if (!validateEmail(email)) {\r\n            errorMessage = \"Vui lòng nhập đúng định dạng email\"\r\n            \r\n        }\r\n        else if (!img && !selectedImg) {\r\n            errorMessage = \"Vui lòng chọn ảnh đại diện\"\r\n            \r\n        }\r\n        else if (username === \"\") {\r\n            errorMessage = \"Vui lòng nhập tên đăng nhập\"\r\n            \r\n        }\r\n        else if (password === \"\") {\r\n            errorMessage = \"Vui lòng nhập mật khẩu\"\r\n            \r\n        }\r\n        else if (confirmPassword === \"\") {\r\n            errorMessage = \"Vui lòng nhập mật khẩu xác nhận\"\r\n            \r\n        }\r\n        else if (!(password == confirmPassword)) {\r\n            errorMessage = \"Vui lòng nhập mật khẩu trùng mới mật khẩu xác nhận\"\r\n            \r\n        }\r\n        else {\r\n            errorMessage = \"\"\r\n            setContent(prev => {\r\n                return {\r\n                    ...prev,\r\n                    error: null\r\n                }\r\n            })\r\n            return true;\r\n        }\r\n\r\n        if (errorMessage !== \"\") {\r\n            setContent(prev => {\r\n                return {\r\n                    ...prev,\r\n                    error: errorMessage\r\n                }\r\n            })\r\n            return false\r\n        }\r\n    }\r\n\r\n    function validateEmail(email) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    useEffect(()=> {\r\n        console.log(content.confirmPassword)\r\n        console.log(content.error)\r\n    },[content])\r\n    \r\n    const handleFileInputChange = (e) => {\r\n        const file = e.target.files[0];\r\n        previewFile(file);\r\n        setContent(prev => { \r\n            return{\r\n                ...prev,\r\n                selectedImg: file,\r\n                img: e.target.value,\r\n            }\r\n        })\r\n    };\r\n\r\n    const previewFile = (file) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onloadend = () => {\r\n            setContent(prev => {\r\n                return{\r\n                    ...prev,\r\n                    previewImg: reader.result\r\n                }\r\n            })\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"register-page\">\r\n            <div className=\"register-page__header\">\r\n                <h1>The best chat app in Viet Nam</h1>\r\n            </div>\r\n            <div className=\"register-page__body\">\r\n\r\n                <div className=\"register-form\">\r\n                    <div className=\"register-form__title\">\r\n                        <h2>You're new here!</h2>\r\n                    </div>\r\n                    <div className=\"register-form__alert\">\r\n                        {state.errors.map((error, i) => (<p key={i}>{error.message}</p>))}\r\n                        {content.error !== null && <p> {content.error}</p>}\r\n                    </div>\r\n                    <div className=\"register-form__announce\">\r\n                        {content.error === null && state.finnish && <p> Đăng kí thành công</p>}\r\n                    </div>\r\n                    <div className=\"register-form__body\">\r\n                        <form onSubmit={event => event.preventDefault()}>\r\n                            <div className=\"register-form__body--rows\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    placeholder=\"Name\"\r\n                                    onChange={e => setContent(prev => {return{...prev, name : e.target.value}})}\r\n                                    />\r\n                                <input \r\n                                    type=\"text\"\r\n                                    placeholder=\"Phone number\"\r\n                                    onChange={e => setContent(prev => {return{...prev, phone : e.target.value}})}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <input \r\n                                    type=\"text\"\r\n                                    placeholder=\"Email\"\r\n                                    onChange={e => setContent(prev => {return{...prev, email : e.target.value}})}\r\n                                />\r\n                                 <input\r\n                                    id=\"fileInput\"\r\n                                    type=\"file\"\r\n                                    name=\"image\"\r\n                                    onChange={handleFileInputChange}\r\n                                    value={content.img}\r\n                                    className=\"register-form__body__img-uploader\"\r\n                                />\r\n                                {content.previewImg && (\r\n                                    <img\r\n                                        className=\"register-form__body__img-uploader__img\"\r\n                                        src={content.previewImg}\r\n                                        alt=\"Preview\"\r\n                                        style={{ height: '250px', margin: '0 auto 20px auto', width: \"100%\", objectFit: \"cover\" }}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    placeholder=\"Username\"\r\n                                    onChange={e => setContent(prev => {return{...prev, username : e.target.value}})}\r\n                                />\r\n                                <div className=\"register-form__body--rows\">\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        placeholder=\"Password\"\r\n                                        onChange={e => setContent(prev => {return{...prev, password : e.target.value}})}\r\n                                    />\r\n                                    <input \r\n                                        type=\"password\" \r\n                                        placeholder=\"Confirm Password\"\r\n                                        onChange={e => setContent(prev => {return{...prev, confirmPassword : e.target.value}})}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <button \r\n                                type=\"submit\"\r\n                                disabled={state.isLoading}\r\n                                onClick={async () => {\r\n                                    const isValid = validator()\r\n                                    if (isValid) {\r\n                                        \r\n                                        const data = new FormData();\r\n                                        data.append(\"file\", content.selectedImg)\r\n                                        data.append(\"name\", content.name)\r\n                                        data.append(\"email\", content.email)\r\n                                        data.append(\"phone\", content.phone)\r\n                                        data.append(\"username\", content.username)\r\n                                        data.append(\"password\", content.password)\r\n                                        dispatch({\r\n                                            type : REGISTER,\r\n                                            payload : data\r\n                                        })\r\n                                    }\r\n\r\n                                }} \r\n                            >Register</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"register-form__footer\">\r\n                        <Link \r\n                            style={{textDecoration:\"none\", color: \"#0096C7\"}}\r\n                            to=\"/login\"\r\n                        >Already have an account?</Link>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"register-page__footer\">\r\n                <p>\r\n                    Developed by Le Anh Hao, Tran Bao Long, Nguyen Thuong Hai\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;","import React, { useEffect } from 'react'\r\n\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { KEEP_SESSION } from \"./saga/authSessionSaga\"\r\n\r\nimport Main from './components/Main/Main.jsx'\r\nimport Login from './components/Login/Login.jsx'\r\n\r\nimport PrivateRoute from './components/Route/PrivateRoute.jsx'\r\nimport PublicRoute from './components/Route/PublicRoute.jsx'\r\n\r\nimport Register from './components/Register/Register.jsx'\r\n\r\nexport default function App() {\r\n\r\n  const jwt = useSelector(state => state.jwt)\r\n  const user = useSelector(state => state.session)\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n\r\n    dispatch({type : KEEP_SESSION})\r\n\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('re-render')\r\n    console.log(jwt)\r\n    console.log(user)\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch >\r\n          <PublicRoute exact path=\"/login\" component={Login} />\r\n          \r\n          <PublicRoute exact path=\"/register\" component={Register} />\r\n          \r\n          <PrivateRoute path=\"/\" component={ Main } />\r\n          {/* <Route path=\"/\" component={ Main } /> */}\r\n\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { \r\n    GET_JWT_LOCAL_STORAGE,\r\n    CLEAR_JWT_LOCAL_STORAGE\r\n} from './authActionType'\r\n\r\nconst initialState = {\r\n    token : null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    const jwt = action.payload\r\n    switch(action.type){\r\n        case GET_JWT_LOCAL_STORAGE:\r\n            return {\r\n                ...state,\r\n                token : jwt\r\n            }\r\n        \r\n        case CLEAR_JWT_LOCAL_STORAGE:\r\n            return initialState\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    FETCH_SESSION_START,\r\n    FETCH_SESSION_SUCCESS,\r\n    FETCH_SESSION_FAILURE\r\n} from './sessionActionType'\r\n\r\nconst initialState = {\r\n    user : null,\r\n    error : null\r\n}\r\n\r\nexport const sessionReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n\r\n        case FETCH_SESSION_START:\r\n            return {\r\n                ...state,\r\n                user : null,\r\n                error : null\r\n            }\r\n        \r\n        case FETCH_SESSION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user : action.payload,\r\n                error : null\r\n            }\r\n        \r\n        case FETCH_SESSION_FAILURE:\r\n            return {\r\n                ...state,\r\n                error : action.payload,\r\n                user : null\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { \r\n    LOGIN_START,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE\r\n} from \"./loginActionType\"\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    errors : []\r\n}\r\n\r\nexport const loginReducer = (state = initialState, action) => {\r\n    const { payload } = action\r\n\r\n    switch(action.type){\r\n        \r\n        case LOGIN_START:\r\n            return {\r\n                ...state,\r\n                isLoading : true,\r\n                errors : []\r\n            }\r\n        \r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                errors : []\r\n            }\r\n        \r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                errors : [payload]\r\n            }\r\n        \r\n        default: return state\r\n    }\r\n}","import { \r\n    REGISTER_START,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE\r\n} from \"./registerActionType\"\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    finnish: false,\r\n    errors : []\r\n}\r\n\r\nexport const registerReducer = (state = initialState, action) => {\r\n    const { payload } = action\r\n\r\n    switch(action.type){\r\n        \r\n        case REGISTER_START:\r\n            return {\r\n                ...state,\r\n                isLoading : true,\r\n                errors : []\r\n            }\r\n        \r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                finnish: true,\r\n                errors : [],\r\n            }\r\n        \r\n        case REGISTER_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                errors : [payload]\r\n            }\r\n        \r\n        default: return state\r\n    }\r\n}","import {\r\n    FETCH_MESSAGES_START,\r\n    FETCH_MESSAGES_SUCCESS,\r\n    FETCH_MESSAGES_FAILURE,\r\n    ADD_ONE_NEW_MESSAGE_SUCCESS,\r\n    ADD_ONE_NEW_MESSAGE_FAILURE\r\n} from \"./messagesActionType\"\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n\r\n    receiverId : null,\r\n    messages : [],\r\n    error : null,\r\n    skip : 0,\r\n    limit : 100\r\n}\r\n\r\nexport const messagesReducer = (state = initialState, action) => {\r\n    // const { \r\n    //     receiverId, \r\n    //     newMessages, \r\n    //     error,\r\n    //     skip\r\n    // } = (action.payload)\r\n\r\n    switch(action.type){\r\n\r\n        case FETCH_MESSAGES_START:\r\n\r\n            const list = state.receiverId === action.payload.receiverId ? [...state.messages] : []\r\n            const sk = state.receiverId === action.payload.receiverId ? state.skip : 0\r\n            \r\n            return {\r\n                ...state,\r\n                isLoading : true,\r\n                error : null,\r\n                receiverId : action.payload.receiverId,\r\n                messages : list,\r\n                skip : sk\r\n            }\r\n        \r\n        case FETCH_MESSAGES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                error : null,\r\n                skip : state.skip + action.payload.newMessages.length,\r\n                messages : [...state.messages, ...action.payload.newMessages]\r\n            }\r\n        \r\n        case FETCH_MESSAGES_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                error : action.payload.error\r\n            }\r\n        \r\n        case ADD_ONE_NEW_MESSAGE_SUCCESS:\r\n            console.log(\"called\")\r\n            return {\r\n                ...state,\r\n                messages : [...state.messages, ...action.payload.newMessages],\r\n                skip : state.skip + 1,\r\n                error : null\r\n            }\r\n        \r\n        case ADD_ONE_NEW_MESSAGE_FAILURE:\r\n            console.log(\"called\")\r\n            return {\r\n                ...state,\r\n                error : action.payload.error\r\n            }\r\n        \r\n        \r\n        default : return state\r\n\r\n    }\r\n\r\n}","import {\r\n    FETCH_CONVERSATION_START,\r\n    FETCH_CONVERSATION_SUCCESS,\r\n    FETCH_CONVERSATION_FAILURE,\r\n    PUSH_CONVERSATION\r\n} from \"./conversationActionType\"\r\n\r\nconst initialState = {\r\n    list : [],\r\n    isLoading : false,\r\n    error : null\r\n}\r\n\r\nexport const conversationReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        \r\n        case FETCH_CONVERSATION_START:\r\n            return {\r\n                ...state,\r\n                isLoading : true,\r\n                error : null\r\n            }\r\n        \r\n        case FETCH_CONVERSATION_SUCCESS:\r\n\r\n            const tempList = [ ...action.payload.conversationList]\r\n            tempList.sort((prev, next) => next.lastedTime - prev.lastedTime) //sap giam dan\r\n            console.log(tempList)\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                error : null,\r\n                list : [...tempList]\r\n            }\r\n\r\n            case FETCH_CONVERSATION_FAILURE:\r\n                return {\r\n                    ...state,\r\n                    isLoading: false,\r\n                    error : action.payload.error\r\n                }\r\n            \r\n            case PUSH_CONVERSATION:\r\n                console.log(\"called\")\r\n                \r\n                const { newMessage } = action.payload\r\n                console.log(newMessage)\r\n                const tempListPush = state.list\r\n                if (newMessage.newFriend === undefined){    \r\n                    const founds = []\r\n                    for(let i in tempListPush){\r\n                        if((tempListPush[i].contactedId === newMessage.senderId) || \r\n                            (tempListPush[i].contactedId === newMessage.receiverId)\r\n                        ){\r\n                            console.log(\"found: \", i, tempListPush[i])\r\n                            founds.push( [i, tempListPush[i]] )\r\n                        }\r\n                    }\r\n                    if(founds.length > 0){\r\n\r\n                        console.log(founds[0][0])\r\n                        console.log(founds[0][1])\r\n                        const oldMessageIndex = founds[0][0]\r\n                        const oldMessage = founds[0][1]\r\n                        tempListPush.splice(oldMessageIndex, 1)\r\n                        \r\n                        tempListPush.unshift({\r\n                            name : founds[0][1].name,\r\n                            image : founds[0][1].image,\r\n                            contactedId : founds[0][1].contactedId,\r\n                            lastedMessage : newMessage.content,\r\n                            lastedTime : newMessage.sentTime\r\n                        })\r\n    \r\n                        console.log(`>0`)\r\n                        return{\r\n                            ...state,\r\n                            list : [...tempListPush]\r\n                        }\r\n                    } else{\r\n                        console.log(newMessage)\r\n                        return {\r\n                            ...state,\r\n                            list : [newMessage, ...state.list]\r\n                        }\r\n                    }\r\n                \r\n                }\r\n                \r\n                else{\r\n                    console.log(\"newFriend\")\r\n                    console.log(newMessage)\r\n                    return {\r\n                        ...state,\r\n                        list: [newMessage, ...state.list]\r\n                    }\r\n                }\r\n\r\n        default : return state\r\n\r\n    }\r\n\r\n}","import { \r\n    SEARCH_START,\r\n    SEARCH_SUCCESS,\r\n    SEARCH_FAILURE\r\n} from \"./searchActionType\"\r\n\r\nconst initialState = {\r\n    isLoading : false,\r\n    data: [],\r\n    error : null,\r\n}\r\n\r\nexport const searchReducer = (state = initialState, action) => {\r\n    const { payload } = action\r\n\r\n    switch(action.type){\r\n        \r\n        case SEARCH_START:\r\n            return {\r\n                ...state,\r\n                isLoading : true,\r\n                error : null\r\n            }\r\n        \r\n        case SEARCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                error : null,\r\n                data: [...payload.searchResults]\r\n            }\r\n        \r\n        case SEARCH_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading : false,\r\n                error : payload.error\r\n            }\r\n        \r\n        default: return state\r\n    }\r\n}","import { call, put, takeEvery, all, take } from 'redux-saga/effects'\r\n\r\nimport { \r\n    GET_JWT_LOCAL_STORAGE,\r\n    GET_JWT, \r\n    CLEAR_JWT_LOCAL_STORAGE, \r\n    CLEAR_JWT \r\n} from '../redux/auth/authActionType'\r\n\r\n\r\nexport function* workerJwt(action){\r\n    const jwt = yield call({context: localStorage, fn: localStorage.getItem}, 'ACCESS_TOKEN')\r\n    console.log(jwt)\r\n    yield put({\r\n        type : GET_JWT_LOCAL_STORAGE,\r\n        payload : jwt\r\n    })\r\n}\r\n\r\nexport function* workerClearJWt(action){\r\n    yield call({\r\n        context : localStorage,\r\n        fn : localStorage.removeItem\r\n    }, \"ACCESS_TOKEN\")\r\n    yield put({type : CLEAR_JWT_LOCAL_STORAGE})\r\n}\r\n\r\nexport function* watchJwt(){\r\n    yield takeEvery(GET_JWT, workerJwt)\r\n    yield takeEvery(CLEAR_JWT, workerClearJWt)\r\n}","import { \r\n    ADD_ONE_NEW_MESSAGE_SUCCESS, \r\n    ADD_ONE_NEW_MESSAGE_FAILURE,\r\n    SEND_MESSAGE\r\n} from \"./redux/messages/messagesActionType\"\r\n\r\nimport {\r\n    PUSH_CONVERSATION,\r\n    MAKE_CONVERSATION\r\n} from \"./redux/conversation/conversationActionType\"\r\n\r\nimport { io } from 'socket.io-client';\r\nexport const INIT_SOCKET = \"INIT_SOCKET\"\r\n\r\n\r\nlet socket = null\r\n\r\nexport const socketMiddleware = storeAPI => next => action => {\r\n    const { user } = storeAPI.getState().session\r\n\r\n    if(action.type === INIT_SOCKET){\r\n        \r\n        const handshake = {\r\n            auth : {\r\n                userId : user._id,\r\n                // add token later\r\n            }\r\n        }\r\n\r\n        socket = io(\"http://localhost:4000\", handshake)\r\n        \r\n        //\r\n        socket.on(\"test\", (data) => {\r\n            console.log(\"server send: \", data)\r\n        })\r\n        socket.on(\"server-make-conversation\", function(data) {\r\n            let { user1, user2 } = data\r\n            let targetUser  \r\n            if(user1._id === user._id){\r\n                targetUser = user2\r\n            } else {\r\n                targetUser = user1\r\n            }\r\n            console.log(targetUser)\r\n            storeAPI.dispatch({ \r\n                type: PUSH_CONVERSATION,\r\n                payload :  {\r\n                    newMessage: {\r\n                        name : targetUser.locals.name,\r\n                        image : targetUser.locals.image,\r\n                        contactedId : targetUser._id,\r\n                        receiverId: targetUser._id,\r\n                        lastedMessage : \"\",\r\n                        lastedTime : Date().now,\r\n                    }\r\n                }\r\n            })\r\n            \r\n            \r\n        })\r\n\r\n        socket.on(\"server-send-message\", function(data) {\r\n            \r\n            console.log(\"server send this: \", data)\r\n            const { message, error } = data\r\n\r\n            if(message){\r\n                console.log(\"rece\")\r\n                storeAPI.dispatch({\r\n                    type : ADD_ONE_NEW_MESSAGE_SUCCESS,\r\n                    payload : {\r\n                        newMessages : [message]\r\n                    }\r\n                })\r\n\r\n                storeAPI.dispatch({\r\n                    type : PUSH_CONVERSATION,\r\n                    payload : {\r\n                        newMessage : message\r\n                    }\r\n                })\r\n\r\n            }\r\n            if(error){\r\n                storeAPI.dispatch({\r\n                    type : ADD_ONE_NEW_MESSAGE_FAILURE,\r\n                    payload : {\r\n                        error\r\n                    }\r\n                })\r\n            }\r\n\r\n            console.log(storeAPI.getState())\r\n        })\r\n\r\n        \r\n    } else if (action.type === SEND_MESSAGE) {\r\n\r\n        const { receiverId, content } = action.payload\r\n        console.log(\"you send message - wait for server response!\")\r\n        socket.emit(\"client-send-message\", {\r\n            senderId : user._id, \r\n            // senderId : action.payload.senderId, \r\n            receiverId,\r\n            content \r\n        })\r\n\r\n    } else if (action.type === MAKE_CONVERSATION) {\r\n        socket.emit(\"client-make-conversation\", {\r\n            userId : user._id, \r\n            targetId: action.payload.targetId,\r\n\r\n        })  \r\n    }\r\n    \r\n    else return next(action)\r\n}","import { call, put, takeEvery, select } from 'redux-saga/effects'\r\nimport axios from '../services/base.server';\r\nimport { io } from \"socket.io-client\";\r\n\r\n\r\nimport {\r\n    FETCH_SESSION,\r\n    FETCH_SESSION_START,\r\n    FETCH_SESSION_SUCCESS,\r\n    FETCH_SESSION_FAILURE\r\n} from '../redux/session/sessionActionType'\r\n\r\nimport { \r\n    ADD_ONE_NEW_MESSAGE_FAILURE, \r\n    ADD_ONE_NEW_MESSAGE_SUCCESS \r\n} from \"../redux/messages/messagesActionType\"\r\n\r\nimport { INIT_SOCKET } from \"../socketClient\"\r\n\r\nexport function* workerFetchSession(action){\r\n    \r\n    try{\r\n        //get token in store\r\n        const token = yield select(state => state.jwt.token)\r\n        console.log(\"saga log: \", token)\r\n        // start fetch session (user info)\r\n        yield put({type : FETCH_SESSION_START})\r\n        //ajax\r\n        const response = yield axios.get(`/users/token/${token}`, {\r\n            headers: {\r\n              'Authorization': `Bearer ${token}` \r\n            }\r\n        })\r\n        console.log(response)\r\n        //save to store\r\n        let { user, error } = response.data\r\n        if(user){\r\n            const handshake = {\r\n                auth : {\r\n                    userId : user._id,\r\n                    // add token later\r\n                }\r\n            }\r\n            // // IMPLEMENT SOCKET\r\n            // const socket = yield io(\"http://localhost:4000\", handshake)\r\n            // console.log(socket)\r\n            // user = { ...user, socket : socket }\r\n            // //\r\n\r\n            // // socket handle here\r\n            // socket.on(\"test\", (data) => {\r\n            //     console.log(\"server send: \", data)\r\n            // })\r\n\r\n            // socket.on(\"server-send-message\", function(data) {\r\n            //     // add new message to messageState\r\n            //     const store = select(state => state)\r\n            //     console.log(store)\r\n            //     console.log(\"server send this: \", data)\r\n            //     const { message, error } = data\r\n\r\n            //     if(message){\r\n            //         console.log(\"rece\")\r\n            //         put({\r\n            //             type : ADD_ONE_NEW_MESSAGE_SUCCESS,\r\n            //             payload : {\r\n            //                 message\r\n            //             }\r\n            //         })\r\n            //     }\r\n            //     if(error){\r\n            //         put({\r\n            //             type : ADD_ONE_NEW_MESSAGE_FAILURE,\r\n            //             payload : {\r\n            //                 error\r\n            //             }\r\n            //         })\r\n            //     }\r\n            // })\r\n\r\n\r\n            yield put({\r\n                type : FETCH_SESSION_SUCCESS,\r\n                payload : user\r\n            })\r\n\r\n            yield put({\r\n                type : INIT_SOCKET\r\n            })\r\n\r\n        }\r\n        if(error) throw new Error(error.message)\r\n    } catch (error) {\r\n        console.log(error.message)\r\n        yield put({\r\n            type : FETCH_SESSION_FAILURE,\r\n            payload : error\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport function* watchFetchSession(){\r\n    yield takeEvery(FETCH_SESSION, workerFetchSession)\r\n}","import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport axios from '../services/base.server';\r\n\r\nimport { \r\n    LOGIN,\r\n    LOGIN_START,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAILURE\r\n} from \"../redux/login/loginActionType\"\r\nimport { KEEP_SESSION } from \"./authSessionSaga\"\r\nimport { CLEAR_JWT } from \"../redux/auth/authActionType\"\r\n\r\nexport function* workerLogin(action){\r\n    try{\r\n        \r\n        console.log(\"run login\")\r\n        yield put({ type : CLEAR_JWT })\r\n        const { username, password } = action.payload\r\n        if(!username || !password) throw new Error(\"Username and Password are required!\")\r\n        yield put({type : LOGIN_START})\r\n        //send login req\r\n        const response = yield axios.post(`/auths/login`, {\r\n            username, password\r\n        })\r\n        yield console.log(response)\r\n        const { accessToken, error } = response.data\r\n\r\n        if(accessToken){\r\n\r\n            //store token to localStorage\r\n            yield call({\r\n                context: localStorage,\r\n                fn: localStorage.setItem\r\n            }, 'ACCESS_TOKEN', accessToken)\r\n            //dispatch to get jwt from localstorage and user info\r\n            yield put({type : KEEP_SESSION})\r\n            \r\n            yield put({type : LOGIN_SUCCESS})\r\n\r\n        }\r\n        \r\n        if(error){\r\n            throw new Error(error)\r\n        }\r\n\r\n    } catch(error) {\r\n        console.log(error)\r\n        yield put({ type: KEEP_SESSION })\r\n        yield put({type : LOGIN_FAILURE, payload : error})\r\n    }\r\n}\r\n\r\nexport function* watchLogin(){\r\n    yield takeEvery(LOGIN, workerLogin)\r\n}","import { put, takeEvery, call } from 'redux-saga/effects'\r\nimport {\r\n    REGISTER,\r\n    REGISTER_START,\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAILURE\r\n} from '../redux/register/registerActionType'\r\nimport { LOGIN, LOGIN_SUCCESS } from '../redux/login/loginActionType'\r\nimport axios from \"../services/base.server\"\r\n\r\nexport function* workerRegister(action) {\r\n    try {\r\n        console.log(\"run register\");\r\n        const data = action.payload\r\n        // console.log(action.payload)\r\n        console.log(data.get(\"file\"))\r\n        // const payloads = Object.keys(action.payload).map((key) => [Number(key), action.payload[key]]);\r\n        \r\n        yield put({type: REGISTER_START});\r\n\r\n        // send register request\r\n\r\n        const response = yield axios({\r\n            method: \"post\",\r\n            url: \"/auths/register\",\r\n            data: data,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n\r\n          })\r\n        if (response.data.data !== undefined){\r\n            \r\n            let {username, password} = response.data.data.locals\r\n    \r\n            yield put({type: REGISTER_SUCCESS})\r\n            // const timerLogin = yield setTimeout(() =>{\r\n                \r\n            // },3000)\r\n            // yield clearTimeout(timerLogin)\r\n            yield put({type: LOGIN, payload: {username, password}})\r\n            yield put({type: LOGIN_SUCCESS})\r\n        }\r\n        else throw new Error(\"There is an existing account\")\r\n    } catch (error) {\r\n        console.log(error.message)\r\n        yield put({type: REGISTER_FAILURE, payload: error})\r\n    }\r\n}\r\n\r\nexport function* watchRegister(){\r\n    yield takeEvery(REGISTER, workerRegister)\r\n}","import { put, takeEvery, select, takeLatest } from 'redux-saga/effects'\r\nimport { \r\n    FETCH_MESSAGES,\r\n    FETCH_MESSAGES_START,\r\n    FETCH_MESSAGES_SUCCESS,\r\n    FETCH_MESSAGES_FAILURE,\r\n    SEND_MESSAGE\r\n} from \"../redux/messages/messagesActionType\"\r\nimport axios from '../services/base.server';\r\n\r\nfunction* workerFetchMessages(action){\r\n    /** dispatch this\r\n     * payload : {\r\n                senderId : session.user._id,\r\n                receiverId : userId,\r\n                skip : currentMessages.skip\r\n            }\r\n     */\r\n    try{\r\n       \r\n        console.log(action.payload)\r\n        yield put({ \r\n            type : FETCH_MESSAGES_START,\r\n            payload : {...action.payload}\r\n        })\r\n        \r\n        const cM = yield select(state => state.currentMessages)\r\n        console.log(\"after start: \", cM )\r\n\r\n        const token = yield select(state => state.jwt.token)\r\n        const header = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` \r\n            }\r\n        }\r\n\r\n        console.log(action)\r\n\r\n        const response = yield axios.post(\"/messages/get\", action.payload, header)\r\n\r\n        const { messages, error } = response.data\r\n\r\n        console.log(\"fetch ook: \", messages)\r\n\r\n        if(messages){\r\n\r\n            yield put({\r\n                type : FETCH_MESSAGES_SUCCESS,\r\n                payload : {\r\n                    ...action.payload,\r\n                    newMessages : response.data.messages\r\n                }\r\n            })\r\n        }\r\n        if(error) throw new Error(error)\r\n        \r\n    } catch(error) {\r\n        put({\r\n            type : FETCH_MESSAGES_FAILURE,\r\n            payload : {\r\n                ...action.payload,\r\n                error\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\n// function* workerSendNewMessage(action){\r\n//     const user = yield select(state => state.session.user)\r\n//     const { receiverId, content } = action.payload\r\n//     console.log(\"you send message - wait for server response!\")\r\n//     console.log(user)\r\n//     user.socket.emit(\"client-send-message\", {\r\n//         // senderId : user._id,  \r\n            // senderId : action.payload.senderId, //test\r\n            // receiverId,\r\n            // content\r\n//     })\r\n\r\n// }\r\n\r\nexport function* watchProcessMessages(){\r\n    yield takeEvery(FETCH_MESSAGES, workerFetchMessages)\r\n    // yield takeLatest(SEND_MESSAGE, workerSendNewMessage)\r\n}","import { put, takeEvery, select, takeLatest } from 'redux-saga/effects'\r\nimport axios from '../services/base.server';\r\n\r\nimport {\r\n    FETCH_CONVERSATION,\r\n    FETCH_CONVERSATION_START,\r\n    FETCH_CONVERSATION_SUCCESS,\r\n    FETCH_CONVERSATION_FAILURE\r\n} from \"../redux/conversation/conversationActionType\"\r\n\r\nfunction* workerFetchConversation(action){\r\n\r\n    try {\r\n        \r\n        yield put({ type : FETCH_CONVERSATION_START })\r\n\r\n        const userId = yield select(state => state.session.user._id)\r\n        const token = yield select(state => state.jwt.token)\r\n        const header = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` \r\n            }\r\n        }\r\n        const response = yield axios.post(\"/conversation/get-list\", {\r\n            userId\r\n        }, header)\r\n        const { conversationList } = response.data\r\n        console.log(conversationList)\r\n\r\n        yield put({\r\n            type : FETCH_CONVERSATION_SUCCESS,\r\n            payload : {\r\n                conversationList\r\n            }\r\n        })\r\n\r\n\r\n\r\n    } catch (error) {\r\n        yield put({\r\n            type : FETCH_CONVERSATION_FAILURE,\r\n            payload : {\r\n                error\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function* watchFetchConversation(){\r\n    yield takeEvery(FETCH_CONVERSATION, workerFetchConversation)\r\n}","import { put, takeEvery, call, select } from 'redux-saga/effects'\r\nimport {\r\n    SEARCH,\r\n    SEARCH_START,\r\n    SEARCH_SUCCESS,\r\n    SEARCH_FAILURE\r\n} from '../redux/search/searchActionType'\r\nimport axios from '../services/base.server';\r\n\r\nexport function* workerSearch(action) {\r\n    try {\r\n        console.log(\"run search\");\r\n        const { search } = action.payload\r\n        // const payloads = Object.keys(action.payload).map((key) => [Number(key), action.payload[key]]);\r\n        \r\n        if (![search].every(Boolean)) throw new Error(\"Please fill all fields\");\r\n        yield put({type: SEARCH_START});\r\n        // send search request\r\n\r\n        const userId = yield select(state => state.session.user._id);\r\n        const token = yield select(state => state.jwt.token);\r\n        const header = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}` \r\n            }\r\n        }\r\n        const response = yield axios.post(\"/users/search\", {\r\n            search, userId\r\n        }, header)\r\n        console.log(`Search ${search}`)\r\n        if (response.data.users) {\r\n            yield put({type: SEARCH_SUCCESS, payload: { \r\n                searchResults: response.data.users\r\n            }})\r\n        }\r\n        if (response.data.error) { throw new Error(response.data.error)}\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put({type: SEARCH_FAILURE, payload: {error}})\r\n    }\r\n}\r\n\r\nexport function* watchSearch(){\r\n    yield takeEvery(SEARCH, workerSearch)\r\n}","import { all } from 'redux-saga/effects'\r\n\r\nimport { watchJwt } from './authSaga'\r\nimport { watchFetchSession } from './sessionSaga'\r\nimport { watchKeepSession } from \"./authSessionSaga\"\r\nimport { watchLogin } from \"./loginSaga\"\r\nimport { watchRegister } from \"./registerSaga\"\r\nimport { watchProcessMessages } from \"./messagesSaga\"\r\nimport { watchFetchConversation } from \"./conversationSaga\"\r\nimport { watchSearch } from \"./searchSaga\"\r\n\r\nexport default function* rootSaga(){\r\n    yield all([\r\n        watchJwt(),\r\n        watchFetchSession(),\r\n        watchKeepSession(),\r\n        watchLogin(),\r\n        watchRegister(),\r\n        watchProcessMessages(),\r\n        watchFetchConversation(),\r\n        watchSearch()\r\n    ])\r\n}","import { \r\n    createStore,\r\n    applyMiddleware,\r\n    combineReducers\r\n} from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { authReducer } from './auth/authReducer'\r\nimport { sessionReducer } from './session/sessionReducer'\r\nimport { loginReducer } from \"./login/loginReducer\"\r\nimport { registerReducer } from \"./register/registerReducer\"\r\nimport { messagesReducer } from \"./messages/messagesReducer\"\r\nimport { conversationReducer } from \"./conversation/conversationReducer\"\r\nimport { searchReducer } from \"./search/searchReducer\"\r\n\r\nimport rootSaga from '../saga/rootSaga'\r\nimport { socketMiddleware } from \"../socketClient\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst rootReducer = combineReducers({\r\n    jwt: authReducer,\r\n    session : sessionReducer,\r\n    login : loginReducer,\r\n    register : registerReducer,\r\n    currentMessages : messagesReducer,\r\n    conversation : conversationReducer,\r\n    searchResults : searchReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(socketMiddleware, sagaMiddleware)\r\n)\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}